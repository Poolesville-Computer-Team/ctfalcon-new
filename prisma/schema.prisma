// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
    binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id              String    @id @unique @default(cuid())
    email           String    @unique
    hashed_password String?
    username        String    @unique
    createdAt       DateTime  @default(now())
    profile         Profile?
    sessions        Session[]
}

model Session {
    id        String   @id
    userId    String
    expiresAt DateTime
    user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Profile {
    id         String   @id @unique @default(cuid())
    user       User     @relation(fields: [userId], references: [id])
    userId     String   @unique
    name       String?
    points     Int      @default(0)
    school     String?
    team       Team?    @relation(fields: [teamId], references: [id])
    teamId     String?
    ageGroup   AgeGroup
    country    String   @db.Char(2)
    gender     Gender
    postalCode String
}

model Team {
    id         String      @id @unique @default(cuid())
    name       String      @unique
    points     Int         @default(0)
    members    Profile[]
    challenges Challenge[]
    createdAt  DateTime    @default(now())
}

model Challenge {
    id             String   @id @unique @default(cuid())
    title          String
    description    String
    points         Int
    left           Int
    solvedBy       Team[]
    flag           String
    createdAt      DateTime @default(now())
    attachmentUrl  String?
    additionalInfo String?
}

enum LoginType {
    email
    github
}

enum AgeGroup {
    under18
    over18
}

enum Gender {
    male
    female
    nonBinaryGenderFluid
    notListedPreferNotToAnswer
}
